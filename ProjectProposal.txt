//Zachary Teutsch
//
//CSCI 1300
//
//Conway's Game of Life
//Project Proposal


My project is to create interactive version of Conway's Game of Life (GOL).

GOL uses a simple set of algorithmic rules to determine the survival of hypothetical "lifeforms."
The rules are as follows:

	1. Fewer than 2 alive neighbors, the cell dies

	2. 2 alive neighbors, the cell survives

	3. 3 alive neighbors, the cell either a) survives or b) comes alive

	4. More than 3 alive neighbors, the cell dies

My pogram will these rules to execute Conway's Game of Life from given starting circumstances.

Interaction with user input:
	-Manipulate size of board.
	-Experiment with pre-set/randomized starting conditions
	-Change character representations of "alive" and "dead" lifeforms

I plan to use two classes to implement GOL:
	
	1. cell class, that represents each individual "lifeform" in the game
	2. dish class, that represents the hypothetical container for the lifeforms and the circumstances of the game


I chose to design the program in this way because it allows me to easily separate and manage both the logic of
the cells (in the cell class) and the state of the game as a whole(in the dish class).

Between these two classes, I'll be to meet all the code requirements of the project.